How to build and develop Objenesis.

= Maven =

Use Maven 2.0.4. 

*Important:* You need to compile the assembly plugin 2.2-SNAPSHOT from the maven sources or to retrieve them from their snapshot repository (it doesn't always work). The official 2.1 version won't work.

= Eclipse =

To create eclipse projects, we use maven. The first time we create your eclipse projects, launch, *having Eclipse being closed*, the following command in a shell.

`mvn eclipse:add-maven-repo -Declipse.workspace=%YOUR_ECLIPSE_WORKSPACE%`

Where `%YOUR_ECLIPSE_WORKSPACE%` is the path to... your eclipse workspace.

Then, each time you need to generate the eclipse project, just type

`mvn eclipse:eclipse -DdownloadSources=true`

in objenesis root directory and all eclipse projects will be created.

If you didn't figure it out yet, you then need to import all the projects in your workspace. If they're already there, just refresh them.

= Build a release =

Done in two steps from the root directory.

  # `mvn install` (to build and test the release)
  # `mvn -Pbin package assembly:assembly` (to create the final jar)
  # `mvn -Psrc package assembly:assembly` (to create the source jar)
  # `mvn -Ptck package assembly:assembly` (to create the tck executable jar)

The results will be three jars in _target_ dir named 

  * `objenesis-version.jar`.
  * `objenesis-version-sources.jar`.
  * `objenesis-version-tck.jar`.

*Note:* The _package_ target needs to be called because of a maven quirk. The artifact file is not initialized correctly otherwise and you get an error...

= Build the site =

Call `mvn antrun:run xsite:run` from the _website_ directory. The result is available in _target/xsite_.

= Test =

Normal tests are done like usual through `mvn test`. To perform tests on every supported platforms, call `mvn -Pjvm-test test`. This will launch the TCK tests on all JVMs. The path for these JVMs should be specified in the settings.xml file of your home directory. Here's an exemple:
{{{
<settings xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
                      http://maven.apache.org/xsd/settings-1.0.0.xsd">

  <profiles>
    <profile>
      <id>jvm-test</id>
      
      <properties>
        <sun_jdk>C:\Program Files\Java\jre1.6.0\bin\java.exe</sun_jdk>
        <jrockit>C:\Program Files\Java\jrockit-R26.4.0-jre1.4.2_11\bin\java.exe</jrockit>
      </properties>
      
    </profile>
  </profiles>

</settings>
}}}
