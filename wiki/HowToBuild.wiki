How to build and develop Objenesis.

= Maven =

I'm using Maven 2.0.7.

= Eclipse =

To create eclipse projects, we use maven. The first time we create your eclipse projects, launch, *having Eclipse being closed*, the following command in a shell.

`mvn eclipse:add-maven-repo -Declipse.workspace=%YOUR_ECLIPSE_WORKSPACE%`

Where `%YOUR_ECLIPSE_WORKSPACE%` is the path to... your eclipse workspace.

Then, each time you need to generate the eclipse projects, just call

`build_eclipse.bat`

in Objenesis root directory and all eclipse projects will be created.

If you didn't figure it out yet, you then need to import all the projects in your workspace. If they're already there, just refresh them.

= Build a release =

Call `build_release.bat` from Objenesis root directory. This will build the following artifacts:

|| *Artifact* || *Directory* ||
|| binary jar || main/target ||
|| source jar || main/target ||
|| javadoc jar || main/target ||
|| maven repo bundle || main/target ||
|| tck jar || target ||
|| website || target/xsite ||

*Important:* Due to a [http://jira.codehaus.org/browse/MREPOSITORY-11 bug] in the maven repository plugin, you need to add the javadoc manually to the bundle jar. Do from `main\target`:

`jar uvf objenesis-x.y-bundle.jar objenesis-x.y-javadoc.jar`

= Deliver a release =

We use the maven release plugin for that. From a clean checkout, call 

`mvn release:prepare -DdryRun=true -Ptck,website`

from the Objenesis root directory. Answer the questions. You can press enter (to validate the default) for all of them expect the tag which should be something like `1_0`.

If everything goes well, do the real release (dryRun=true does a release simulation).

`mvn release:prepare -Dresume=false -Ptck,website`

Give the same answers to the questions.

At this point, the tag has been created and the version upgraded in the poms.

Checkout the tagged version and build a release (see above) for it.

Now just add the binaries, sources, maven bundle and tck to the [http://code.google.com/p/objenesis/downloads/list download section].

Finally, check-in the website to objenesis-docs module. Don't forget to add the svn:mime-type property to newly added files.

= Test =

Normal tests are done like usual through `mvn test`. To perform tests on every supported platforms, call `mvn -Pjvm-test test`. This will launch the TCK tests on all JVMs. The path for these JVMs should be specified in the settings.xml file of your home directory. Here's an exemple:
{{{
<settings xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
                      http://maven.apache.org/xsd/settings-1.0.0.xsd">

  <profiles>
    <profile>
      <id>jvm-test</id>
      
      <properties>
        <sun_jdk>C:\Program Files\Java\jre1.6.0\bin\java.exe</sun_jdk>
        <jrockit>C:\Program Files\Java\jrockit-R26.4.0-jre1.4.2_11\bin\java.exe</jrockit>
      </properties>
      
    </profile>
  </profiles>

</settings>
}}}